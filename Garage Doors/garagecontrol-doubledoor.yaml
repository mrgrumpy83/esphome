esphome:
  name: garage-door
  platform: ESP8266
  board: d1_mini
  
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  #ap:
    #ssid: "fallback"
    #password: "wyBRxKBVmpfe"

#captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:
  password: "88L*CjHS@f2m"
  encryption: 
    key: "bwOlz9/K6wFhhq9D9t/JHtZ+CERh7fqA509K44wlhAI="

ota:
  password: "88L*CjHS@f2m"

web_server:
  port: 80

text_sensor:
  - platform: template
    name: "Garage Door Opener Uptime"
    id: uptime_human
    icon: mdi:clock-start
  
sensor:
- platform: wifi_signal
  name: "Garage Door Opener Wifi"
  update_interval: 60s
  icon: mdi:wifi
- platform: uptime
  name: "Garage Door Opener Uptime Seconds"
  id: uptime_sensor
  on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? String(days) + "d " : "") +
                (hours ? String(hours) + "h " : "") +
                (minutes ? String(minutes) + "m " : "") +
                (String(seconds) + "s")
              ).c_str();

switch:
#Car Door relay output
- platform: gpio
  id: car_door_switch
  #internal: true
  pin:
    number: GPIO5
    inverted: True
  restore_mode: ALWAYS_OFF

#Bike Door relay output
- platform: gpio
  id: bike_door_switch
  #internal: true
  pin:
    number: GPIO4
    inverted: True
  restore_mode: ALWAYS_OFF
 
#Switch to toggle reboot 
- platform: restart
  name: "Garage Door REBOOT"
  
- platform: template
  id: car_door_lock
  name: "Car Door Lock"
  icon: "mdi:lock"
  #optimistic: true
  turn_on_action:
    - switch.template.publish:
        id: car_door_lock
        state: ON
    - logger.log: "Door is now locked!"
  turn_off_action:
    - switch.template.publish:
        id: car_door_lock
        state: OFF
    - logger.log: "Door Unlocked!"
    
- platform: template
  id: bike_door_lock
  name: "Bike Door Lock"
  icon: "mdi:lock"
  #optimistic: true
  turn_on_action:
    - switch.template.publish:
        id: bike_door_lock
        state: ON
    - logger.log: "Door is now locked!"
  turn_off_action:
    - switch.template.publish:
        id: bike_door_lock
        state: OFF
    - logger.log: "Door Unlocked!"

cover:
  - platform: template
    device_class: garage
    assumed_state: true
    name: "Car Door"
    id: car_door_cover
    open_action:
#Add a condition here - state change shouldn't happen if door is locked. 
      - if:
          condition:
            switch.is_off: car_door_lock
          then:
            - switch.turn_on: car_door_switch
            - delay: 0.1s
            - switch.turn_off: car_door_switch
          else:
            - logger.log: "Car Door Locked, not opening."
    close_action:
      - if:
          condition:
            switch.is_off: car_door_lock
          then:
            - switch.turn_on: car_door_switch
            - delay: 0.1s
            - switch.turn_off: car_door_switch
          else:
            - logger.log: "Car Door Locked, not closing."
  - platform: template
    device_class: garage
    assumed_state: true
    name: "Bike Door"
    id: bike_door_cover
    open_action:
#Add a condition here - state change shouldn't happen if door is locked. 
      - if:
          condition:
            switch.is_off: bike_door_lock
          then:
            - switch.turn_on: bike_door_switch
            - delay: 0.1s
            - switch.turn_off: bike_door_switch
          else:
            - logger.log: "Bike Door Locked, not opening."
    close_action: 
      - if:
          condition:
            switch.is_off: bike_door_lock
          then:    
            - switch.turn_on: bike_door_switch
            - delay: 0.1s
            - switch.turn_off: bike_door_switch
          else:
            - logger.log: "Bike Door Locked, not closing."
